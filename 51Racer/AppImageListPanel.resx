<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageButton1.ButtonImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUAAAAAeCAYAAABdY8eZAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0w0hl6ky4wgPQuIB0EURhmBhjKAMMMTWyIqEBEEREBRZCggAGjoUis
        iGIhKKhgD0gQUGIwiqioZEbWSnx5ee/l5ffHvd/aZ+9z99l7n7UuACRPHy4vBZYCIJkn4Ad6ONNXhUfQ
        sf0ABniAAaYAMFnpqb5B7sFAJC83F3q6yAn8i94MAUj8vmXo6U+ng/9P0qxUvgAAyF/E5mxOOkvE+SJO
        yhSkiu0zIqbGJIoZRomZL0pQxHJijlvkpZ99FtlRzOxkHlvE4pxT2clsMfeIeHuGkCNixEfEBRlcTqaI
        b4tYM0mYzBXxW3FsMoeZDgCKJLYLOKx4EZuImMQPDnQR8XIAcKS4LzjmCxZwsgTiQ7mkpGbzuXHxArou
        S49uam3NoHtyMpM4AoGhP5OVyOSz6S4pyalMXjYAi2f+LBlxbemiIluaWltaGpoZmX5RqP+6+Dcl7u0i
        vQr43DOI1veH7a/8UuoAYMyKarPrD1vMfgA6tgIgd/8Pm+YhACRFfWu/8cV5aOJ5iRcIUm2MjTMzM424
        HJaRuKC/6386/A198T0j8Xa/l4fuyollCpMEdHHdWClJKUI+PT2VyeLQDf88xP848K/zWBrIieXwOTxR
        RKhoyri8OFG7eWyugJvCo3N5/6mJ/zDsT1qca5Eo9Z8ANcoISN2gAuTnPoCiEAESeVDc9d/75oMPBeKb
        F6Y6sTj3nwX9+65wifiRzo37HOcSGExnCfkZi2viawnQgAAkARXIAxWgAXSBITADVsAWOAI3sAL4gWAQ
        DtYCFogHyYAPMkEu2AwKQBHYBfaCSlAD6kEjaAEnQAc4DS6Ay+A6uAnugAdgBIyD52AGvAHzEARhITJE
        geQhVUgLMoDMIAZkD7lBPlAgFA5FQ3EQDxJCudAWqAgqhSqhWqgR+hY6BV2ArkID0D1oFJqCfoXewwhM
        gqmwMqwNG8MM2An2hoPhNXAcnAbnwPnwTrgCroOPwe3wBfg6fAcegZ/DswhAiAgNUUMMEQbigvghEUgs
        wkc2IIVIOVKHtCBdSC9yCxlBppF3KAyKgqKjDFG2KE9UCIqFSkNtQBWjKlFHUe2oHtQt1ChqBvUJTUYr
        oQ3QNmgv9Cp0HDoTXYAuRzeg29CX0HfQ4+g3GAyGhtHBWGE8MeGYBMw6TDHmAKYVcx4zgBnDzGKxWHms
        AdYO64dlYgXYAux+7DHsOewgdhz7FkfEqeLMcO64CBwPl4crxzXhzuIGcRO4ebwUXgtvg/fDs/HZ+BJ8
        Pb4LfwM/jp8nSBN0CHaEYEICYTOhgtBCuER4SHhFJBLVidbEACKXuIlYQTxOvEIcJb4jyZD0SS6kSJKQ
        tJN0hHSedI/0ikwma5MdyRFkAXknuZF8kfyY/FaCImEk4SXBltgoUSXRLjEo8UISL6kl6SS5VjJHslzy
        pOQNyWkpvJS2lIsUU2qDVJXUKalhqVlpirSptJ90snSxdJP0VelJGayMtoybDFsmX+awzEWZMQpC0aC4
        UFiULZR6yiXKOBVD1aF6UROoRdRvqP3UGVkZ2WWyobJZslWyZ2RHaAhNm+ZFS6KV0E7QhmjvlygvcVrC
        WbJjScuSwSVzcopyjnIcuUK5Vrk7cu/l6fJu8onyu+U75B8poBT0FQIUMhUOKlxSmFakKtoqshQLFU8o
        3leClfSVApXWKR1W6lOaVVZR9lBOVd6vfFF5WoWm4qiSoFKmclZlSpWiaq/KVS1TPaf6jC5Ld6In0Svo
        PfQZNSU1TzWhWq1av9q8uo56iHqeeqv6Iw2CBkMjVqNMo1tjRlNV01czV7NZ874WXouhFa+1T6tXa05b
        RztMe5t2h/akjpyOl06OTrPOQ12yroNumm6d7m09jB5DL1HvgN5NfVjfQj9ev0r/hgFsYGnANThgMLAU
        vdR6KW9p3dJhQ5Khk2GGYbPhqBHNyMcoz6jD6IWxpnGE8W7jXuNPJhYmSSb1Jg9MZUxXmOaZdpn+aqZv
        xjKrMrttTjZ3N99o3mn+cpnBMs6yg8vuWlAsfC22WXRbfLS0suRbtlhOWWlaRVtVWw0zqAx/RjHjijXa
        2tl6o/Vp63c2ljYCmxM2v9ga2ibaNtlOLtdZzllev3zMTt2OaVdrN2JPt4+2P2Q/4qDmwHSoc3jiqOHI
        dmxwnHDSc0pwOub0wtnEme/c5jznYuOy3uW8K+Lq4Vro2u8m4xbiVun22F3dPc692X3Gw8Jjncd5T7Sn
        t+duz2EvZS+WV6PXzAqrFetX9HiTvIO8K72f+Oj78H26fGHfFb57fB+u1FrJW9nhB/y8/Pb4PfLX8U/z
        /z4AE+AfUBXwNNA0MDewN4gSFBXUFPQm2Dm4JPhBiG6IMKQ7VDI0MrQxdC7MNaw0bGSV8ar1q66HK4Rz
        wzsjsBGhEQ0Rs6vdVu9dPR5pEVkQObRGZ03WmqtrFdYmrT0TJRnFjDoZjY4Oi26K/sD0Y9YxZ2O8Yqpj
        ZlgurH2s52xHdhl7imPHKeVMxNrFlsZOxtnF7YmbineIL4+f5rpwK7kvEzwTahLmEv0SjyQuJIUltSbj
        kqOTT/FkeIm8nhSVlKyUgVSD1ILUkTSbtL1pM3xvfkM6lL4mvVNAFf1M9Ql1hVuFoxn2GVUZbzNDM09m
        SWfxsvqy9bN3ZE/kuOd8vQ61jrWuO1ctd3Pu6Hqn9bUboA0xG7o3amzM3zi+yWPT0c2EzYmbf8gzySvN
        e70lbEtXvnL+pvyxrR5bmwskCvgFw9tst9VsR23nbu/fYb5j/45PhezCa0UmReVFH4pZxde+Mv2q4quF
        nbE7+0ssSw7uwuzi7Rra7bD7aKl0aU7p2B7fPe1l9LLCstd7o/ZeLV9WXrOPsE+4b6TCp6Jzv+b+Xfs/
        VMZX3qlyrmqtVqreUT13gH1g8KDjwZYa5ZqimveHuIfu1nrUttdp15UfxhzOOPy0PrS+92vG140NCg1F
        DR+P8I6MHA082tNo1djYpNRU0gw3C5unjkUeu/mN6zedLYYtta201qLj4Ljw+LNvo78dOuF9ovsk42TL
        d1rfVbdR2grbofbs9pmO+I6RzvDOgVMrTnV32Xa1fW/0/ZHTaqerzsieKTlLOJt/duFczrnZ86nnpy/E
        XRjrjup+cHHVxds9AT39l7wvXbnsfvlir1PvuSt2V05ftbl66hrjWsd1y+vtfRZ9bT9Y/NDWb9nffsPq
        RudN65tdA8sHzg46DF645Xrr8m2v29fvrLwzMBQydHc4cnjkLvvu5L2key/vZ9yff7DpIfph4SOpR+WP
        lR7X/aj3Y+uI5ciZUdfRvidBTx6Mscae/5T+04fx/Kfkp+UTqhONk2aTp6fcp24+W/1s/Hnq8/npgp+l
        f65+ofviu18cf+mbWTUz/pL/cuHX4lfyr468Xva6e9Z/9vGb5Dfzc4Vv5d8efcd41/s+7P3EfOYH7IeK
        j3ofuz55f3q4kLyw8Bv3hPP74uYdwgAAAAlwSFlzAAALDwAACw8BkvkDpQAADKBJREFUeF7tnd2PVdUZ
        h/lb5g/olTHx1t7Yy9betE3bq+pNL1oNF6ailzXE2EkdrU0HS1IBA7ViIjSBZkYyEahMK3WEAewogkxF
        oBDBzuAYt+vZzO/0Pe+stT/OOXMO5KyLJ3t9r5U37Cfv3nvC2fKtZ2ZgIrA1sBBYDawYqK+NOV8GiAMQ
        I2JFzHL8mpHj1x/J+P1mchImAlsDC4HVwIqB+tqY82WAOAAxIlbEbEv5j++B544UD+94p/jFX94vnjyw
        WPzKQH3bgTNjDTEQxIhYEbP1f4QT9z87Wzz0wlzx4z8eK372p79v4JFXxhwTC2JErIiZ4nff9pniwcmZ
        4nsvzhY/+H3gJQP1TAdiRKyIGbHjRn5+aqqYnp4udu/eXezdu3cD+/btG2tsLIgRsSJmxA4BPsEN/fM/
        v1dsO3imeCpTCTEiVsSM2MF3wg39o5ePFY+Gmz1TD7EiZorft8MN/d0XZosfhhs8Uw+xImbELtzET0zv
        2FHs2rUrevNnNkKsiBmxQ4BLj4WsJsuvOcSKmBE7+OnO49EbPZOGmCl+3/9d/EbPpCFmxC7cxEt79uyJ
        3uiZNMSM2CHA4sk37zzmxm72zEbKx+IQM2IHsRs8U4/iF7vBM/UQu3ATR2/wTD3EDgHe5t1W7EbPpCFm
        xA54xxW7wTNpiJnix7ut2A2eSUPMiF24iW/n93ztIWbEDgGu8LEjdpNn0hAzYge83I/d5Jk0xEzx42NH
        7CbPpCFmxC7cxCtZgO1ZF+BKFmCPZAH2RxZgf2QB9sdIBXj28s2u+v6TyyW/Pnyu2Hn8464+QV+sHZg7
        ObsU7auCc7w091G0r45RCvD0petd9VeOLpU8vne++O3h0119gr5YOzB32/6T0b4qOMczBxeifXWMUoAL
        F6911V9+a7Hk0Z1zxfY33+3qE/TF2oG5j+85Fu2rgnM8/dqJaF8doxTgheXLXfXj75wo2b//jWL2rSNd
        fYK+WDsw98DBg9G+KjjHocN/i/bV0VqAiGnmzGet0XxEwxpwc3WtU6ZdYylfu3W7FJrdG5CVXQ/hSaRc
        WUt9TdE5Yn11tBUgYjpw8mJrNB/RsAZwbpVp11jKV2+ulkKzewOysushPImUK2upryk6R6yvjrYCRExv
        zH/YGs1HNKwBnFtl2jWW8pUQP4Rm9wZkZddDeBIpV9ZSX1N0jlhfHW0FiJj+9f6p1mg+omEN4Nwq066x
        lK/f+l8pNLs3ICu7HsKTSLmylvqaonPE+upoLUCkhGg8HOL81S+ifWDnS3TMUdm2M04S9GKinXlcqTN+
        4dKNchz7//XUp2VZ2LkpWK/pWE9bASIlROPhDEuffR7tAztfomOOyradcZKgFxPtzONKnfH/PH+1HMf+
        r82fL8vCzk3Bek3HetoKECkhGg9n+PenN6J9YOdLdMxR2bYzThL0YqKdeVypM/7E0uVyHPu/evSDsizs
        3BSs13Ssp60AkRKi8XCG/1y5Fu0DO1+iY47Ktp1xkqAXE+3M40qd8R9e+KQcx/7/ePdkWRZ2bgrWazrW
        01qAKThEW4kwx9YlQdVTj7sSJuXlGysdySJML2E7D2naPsE5YvLWHlW0FWAKztBWIsyxdUlQ9dTjroRJ
        +dL1LzqSRZhewnYe0rR9gnPE5K09qmgrwBScoa1EmGPrkqDqqcddCZPyJ9dudSSLML2E7TykafsE54jJ
        W3tU0VaAKThDW4kwx9YlQdVTj7sSJuUr1z/vSBZhegnbeUjT9gnOEZO39qhioAJ8df5i5Ts6BMm4tqTE
        SraHqFSnXCVh7c/VQpvPHBGilXGKQQrwD0fOVr6jQ5CKSRtSYiXbQ1SqU66SsPbnaqHNZ44I0co4xSAF
        OHUoZLUV7+gQpGLShpRYyfYQleqUqySs/blaaPOZI0K0Mk4xSAHOvX208h0dglRM2pASK9keolKdcpWE
        tT9XC20+c0SIVsYpBipApEFGhkBiYyzIxQuGeVZonreXrnayM+q8/9OjMDQVoG+nzc9jrWELEGmQkSGQ
        2BgLcvGCYZ4Vmmfm9HInO6PO+z89CkNTAfp22vw81hq2AJEGGRkCiY2xIBcvGOZZoXkOvXehk51R5/2f
        HoWhqQB9O21+HmsNW4BIg4wMgcTGWJCLFwzzrNA8p86c62Rn1Hn/p0dhaCpA306bn8daQxcgEkEalJFV
        LBuUwGKPq1aAzKXfroHsJDFd67AS0xzVBW302TbOMWwBIhGkUZ47yCqWDUpgscdVK0Dm0m/XQHaSmK51
        WIlpjuqCNvpsG+cYtgCRCNKgjKxi2aAEFntctQJkLv12DWQnielah5WY5qguaKPPtnGOYQsQiSANysgq
        lg1KYLHHVStA5tJv10B2kpiudViJaY7qgjb6bBvnGIkAKSOqqmwQufB+jT7fjxi5Ih/J0MNets5YyUoi
        tf2Cdp3TQtvd8AgsiSCqqmwQufB+jT7fjxi5Ih/J0MNets5YyUoitf2Cdp3TQtvd8AgsiSCqqmwQufB+
        jT7fjxi5Ih/J0MNets5YyUoitf2Cdp3TQtvd8AgsiSCqqmwQufB+jT7fjxi5Ih/J0MNets5YyUoitf2C
        dp3TQttd8QiMOGwbWSBCs1kc7wn1dXf+4/+WSDr0S5qMSf1NH3vZOvvEBMheKgNl5jLGQpvPRtl/VAIU
        ZIEIzWZxvCfU192jH1wukXTolzQZk/qbPvaydfaJCZC9VAbKzGWMhTafjbL/qAQoyAIRms3ieE+or7tz
        i8slkg79kiZjUn/Tx162zj4xAbKXykCZuYyx0OazUfYflQAFWSBCs1kc7wn1dffc0kclkg79kiZjUn/T
        x162zj4xAbKXykCZuYyx0OazUfYfuQDBPwYzRhmbZKM6/QgR+ZCR2XkW9lKZbJPxehfIejoHa9kvuQg1
        JrXY2ZWh2rYYmylA8I/BjFHGJtmoTj9CRD5kZHaehb1UJttkvN4Fsp7OwVr2Sy5CjUktdnZlqLYtxmYK
        EPxjMGOUsUk2qtOPEJEPGZmdZ2Evlck2Ga93gaync7CW/ZKLUGNSi51dGapti7GZAgT/GMwYZWySjer0
        I0TkQ0Zm51nYS2WyTcbrXSDr6RysZb/kItSY1GJnV4Zq22JsugCrkPgQk5UWWaDG8Dd+9kMHsBdXJIX8
        yADVx3hgXSvGKno5u9hsAVYh8SEmKy2yQI3hb/zshw5gL65ICvmRAaqP8cC6VoxV9HJ2sdkCrELiQ0xW
        WmSBGsPf+NkPHcBeXJEU8iMDVB/jgXWtGKvo5exiswVYhcSHmKy0yAI1hr/xsx86gL24IinkRwaoPsYD
        61oxVtHL2cXQBYicyNIYL5QJIjT/7pB+m0UiSNoYS5bIY676QFke+L4UrHevCBA5kaUxXigTRGj+3SH9
        NotEkLQxliyRx1z1gbI88H0pWO9eESByIktjvFAmiND8u0P6bRaJIGljLFkij7nqA2V54PtSsN69IkDk
        RJbGeKFMEKH5d4f02ywSQdLGWLJEHnPVB8rywPelYL17RoBkZMrKJCrKZHH66qv3hD4bZCxj2Id2faio
        ookEm549xrAFSEamrEyiokwWp6++ek/os0HGMoZ9aNeHiiqaSLDp2WMMW4BkZMrKJCrKZHH66qv3hD4b
        ZCxj2Id2faioookEm549xrAFSEamrEyiokwWp6++ek/os0HGMoZ9aNeHiiqaSLDp2WMMXYAWsjhAesjK
        fywhK7QCY307hroXnqfJmXo5uxi2AC1kcYD0kJX/WEJWaAXG+nYMdS88T5Mz9XJ2MWwBWsjiAOkhK/+x
        hKzQCoz17RjqXnieJmfq5exi2AK0kMUB0kNW/mMJWaEVGOvbMdS98DxNztTL2cXABDiuDEqA48qgBDiu
        DEqA40qXAPP/CN2e9f8ROguwR7IA+yMLsD+sAFe3ZQG2hpgRO8gCbM+6AMv45f8Svz3r/yV++Vu3WYDt
        WRfgKgIss5n8q3DNIVbrGWBJ7AbP1KP4xW7wTD3ELtzE0Rs8Uw+xQ4BLj72efxazDeXPYoaYETvIP4vZ
        nvyzmP1BzIhduInzz2L2gP1ZzM4Po+sGf9phb/5xxcYh/zB6f+QfRu+P/MPo/eF/GH3igeeOlDf0L0NW
        c+dmP9sFv4M7zjwVIA7EhhgRK2JG7OD+Z2eLh8IN/ZOddyT4SCYKsSFGxIqYKX73bZ8pHgw39MMv3rnB
        eb+V2QixIUbEipgRu3ATTzw/NVVMT0+XWU3shs/8H2JErIgZsUOApQQDWwOLga8DXwXWMl0QE2JDjIgV
        Mcvxa06OX39E4xduYkCEWwOLga8DXwXWMl0QE2JDjIhViNnklm8APR1xJ6CRSSkAAAAASUVORK5CYII=
</value>
  </data>
</root>